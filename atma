#!/usr/bin/env node

require('atma-libs/globals-dev');
require('atma-logger');
require('atma-io');
require('./src/app.js').done(initialize);


function initialize(app) {
	
	var base = io.env.applicationDir.toString();
	
	logger.log('BASE', base);
	
	function loaderPath(name) {
		return base
			+ 'node_modules/atma-libs/include/loader/'
			+ name
			+ '/loader.js'
			;
	}
	
	include.cfg({
		path: base,
		loader: {
			coffee: loaderPath('coffee'),
			less: loaderPath('less'),
			yml: loaderPath('yml'),
			jsnext: loaderPath('traceur'),
		}
	}).routes({
		
		handler: base + 'src/handler/{0}.js',
		parser:  base + 'src/parser/{0}.js',
		action:  base + 'src/action/{0}.js',
		script:  base + 'src/{0}.js',
		helper:  base + 'src/helper/{0}.js',
		server:  base + 'src/server/{0}.js',
		atma:    base + '{0}.js'
	}).js({
		atma: [
			'src/utils/exports'
		],
		settings: '/src/app.settings.js',
		
		script: [ 
			'helper/extensions', 
		],
		
	}).done(function(resp) {
		
		logger(99)
			.log('> process:'.cyan, process)
			.log('> config:'.cyan, app.config);
		

		if (app.config.tasks == null) {
			logger.error('Invalid Config', app.config)
			return 0;
		}

		
		app
			.run()
			.fail(function(error){
				logger.error(error);
				process.exit(1);
			})
			.always(function(){
				if (app.errors.length) {
					logger.error(app.errors);
					
					process.exit(1);
				}
				
				logger.log(' // Done'.green);
			});


		return 1;

	});

	
}

	
	
	

