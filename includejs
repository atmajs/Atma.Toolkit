#!/usr/bin/env node

(function(w) {



    require('libjs-class');
	
    require('./node/app.help.js');	
	require('./src/libjs/include.node.js');

	var program = require('commander');


	global.socketio = require('socket.io');


	include.cfg({
		path: 'file:///' + __dirname + '/',
		lockedToFolder: true
	}).routes({
		ruqq: '/src/libjs/{0}.js',
		handler: '/src/handler/{0}.js',
		parser: '/src/parser/{0}.js',
		action: '/src/action/{0}.js',
		script: '/src/{0}.js',
		helper: '/src/helper/{0}.js',
		base: '/src/base/{0}.js',
		io: '/src/io/{0}.js'
	}).js({
		ruqq: ['net/uri', 'utils', 'arr'],
		parser: ['config'],
		script: [ //
		'sys', //
		'helpers', //		
		],
        io: 'package',		
	}).done(function() {


		if (!(global.config && global.config.state == 4)) {
			console.error('Invalid Config', global.config)
			return 0;
		}


		include.js({
			action: 'action-processor'
		}).done(function(resp) {
			new resp['action-processor']({
				resolve: function() {
					console.log('/* Done */');
				}
			}).process();
		});


		return 1;

	});


}(global));