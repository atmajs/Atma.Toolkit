#!/usr/bin/env node

(function(w) {

	require('libjs-class');
	require('./src/app.help.js');
	require('./src/libjs/include.node.js');
	require('socket.io');

	include.cfg({
		path: 'file:///' + __dirname + '/',
		lockedToFolder: true,
		loader: {
			coffee: '/src/libjs/loader/coffee/loader.js'
		}
	}).routes({
		ruqq: '/src/libjs/{0}.js',
		handler: '/src/handler/{0}.js',
		parser: '/src/parser/{0}.js',
		action: '/src/action/{0}.js',
		script: '/src/{0}.js',
		helper: '/src/helper/{0}.js',
		base: '/src/base/{0}.js',
		io: '/src/io/{0}.js'
	}).js({
		_: '/src/helper/logger.js',
		ruqq: ['net/uri', 'utils', 'arr'],
		parser: ['config'],
		yyy: '/src/app.settings.js',
		script: [ //
		'sys', //
		'helpers', //
		'helper/stdout', //
		],
		io: 'package',
		//
		action: 'action-processor::Action'
	}).done(function(resp) {

		Log('PROCESS', process, 99);
		Log('CONFIG', global.config, 99);


		if (!(global.config && global.config.state == 4)) {
			console.error('Invalid Config', global.config)
			return 0;
		}

		(new resp['Action']()).run(global.config);


		return 1;

	});


}(global));
